from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score

# البيانات النموذجية الموسعة
data = [
    {"text": "أشعر بالحزن والاكتئاب ولا أرى فائدة من الحياة", "label": "اكتئاب"},
    {"text": "لا أرغب في التحدث مع أحد وأشعر بالوحدة", "label": "اكتئاب"},
    {"text": "ليس لدي طاقة لفعل أي شيء، كل شيء يبدو صعبًا", "label": "اكتئاب"},
    {"text": "أشعر بالقلق بشأن مستقبلي وأفكر كثيرًا في الأمور", "label": "قلق"},
    {"text": "أعاني من صعوبة في النوم بسبب أفكار تلاحقني", "label": "قلق"},
    {"text": "قلبي ينبض بسرعة وأشعر بالخوف من أشياء لا أفهمها", "label": "قلق"},
    {"text": "اليوم كان جيدًا، أشعر بالرضا وأستمتع بأوقاتي", "label": "طبيعي"},
    {"text": "أنا سعيد وأشعر بالحيوية والنشاط", "label": "طبيعي"},
    {"text": "أحب قضاء الوقت مع أصدقائي وأشعر بالراحة", "label": "طبيعي"},
    {"text": "أحيانًا أشعر بالحزن، لكني أتجاوز ذلك بسرعة", "label": "طبيعي"},
    {"text": "لدي طاقة إيجابية وأحب مساعدة الآخرين", "label": "طبيعي"},
    {"text": "أشعر بالتوتر قبل الامتحانات وأتمنى النجاح", "label": "قلق"},
    {"text": "أخاف من التحدث أمام الناس ويشعرني ذلك بالرهبة", "label": "قلق"},
    {"text": "أشعر بعدم الأمان في الكثير من الأوقات وأفكر بالأسوأ", "label": "قلق"},
    {"text": "أشعر أنني محبط ولا أريد فعل شيء، كل شيء يبدو بلا معنى", "label": "اكتئاب"},
    {"text": "لست قادرًا على النوم وأشعر باليأس طوال اليوم", "label": "اكتئاب"},
    {"text": "كل شيء على ما يرام، وأنا متفائل بالغد", "label": "طبيعي"},
    {"text": "أنا سعيد بتقدم مشاريعي وأشعر بالتحفيز للعمل", "label": "طبيعي"},
    {"text": "أشعر بضغط كبير في العمل، ولا أعرف كيف أتعامل مع هذا الوضع", "label": "قلق"},
    {"text": "أشعر بالحزن العميق وكأنني لا أستطيع الخروج من هذه الحالة", "label": "اكتئاب"},
    {"text": "أشعر بالحماس للحياة ولدي الكثير من الخطط للمستقبل", "label": "طبيعي"},
    {"text": "أشعر أنني غير قادر على التغيير وأظل في نفس الدوامة", "label": "اكتئاب"},
    {"text": "أشعر بالرهبة عند التعامل مع الآخرين، وأتجنب التفاعل الاجتماعي", "label": "قلق"},
    {"text": "أستمتع بقراءة الكتب وقضاء الوقت مع العائلة", "label": "طبيعي"},
    {"text": "أشعر بالقلق المستمر من الأمور المالية وأخشى المستقبل", "label": "قلق"},
    {"text": "أجد صعوبة في التركيز وأشعر أن كل شيء يتراجع", "label": "اكتئاب"},
    {"text": "أحب ممارسة الرياضة وأشعر بالنشاط بعد التدريب", "label": "طبيعي"},
    {"text": "أشعر بالإحباط لأن الأمور لا تسير كما توقعت", "label": "اكتئاب"},
    {"text": "أشعر بالهدوء والاطمئنان عندما أمارس التأمل", "label": "طبيعي"},
    {"text": "أشعر بالخوف من المستقبل ولا أعرف ما الذي سيحدث لي", "label": "قلق"},
    {"text": "أستمتع بالخروج مع الأصدقاء وأشعر بالراحة معهم", "label": "طبيعي"},
    {"text": "أشعر بعدم الراحة وأفكر بشكل مفرط في كل التفاصيل", "label": "قلق"},
    {"text": "كل يوم يبدو أسوأ من السابق، لا أرى تحسنًا", "label": "اكتئاب"},
    {"text": "أشعر بالسعادة عندما أساعد الآخرين وأقدم لهم الدعم", "label": "طبيعي"},
    {"text": "أشعر بتوتر كبير قبل الاجتماعات وأفكر فيما قد يحدث", "label": "قلق"},
    {"text": "أنا متحمس للأشياء الجديدة وأحب استكشافها", "label": "طبيعي"},
]

# استخراج النصوص والتصنيفات من البيانات
texts = [entry["text"] for entry in data]
labels = [entry["label"] for entry in data]

# تحويل النصوص إلى تمثيلات عددية باستخدام CountVectorizer
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(texts)

# تقسيم البيانات إلى تدريب واختبار
X_train, X_test, y_train, y_test = train_test_split(X, labels, test_size=0.2, random_state=42)

# بناء نموذج Naive Bayes
model = MultinomialNB()
model.fit(X_train, y_train)

# اختبار النموذج
accuracy = model.score(X_test, y_test)
print(f"دقة النموذج: {accuracy:.2f}")

# تفاعل مع المستخدم
while True:
    user_input = input("أدخل نصك (أو اكتب 'خروج' لإنهاء البرنامج): ")
    if user_input.lower() == "خروج":
        break

    # تحويل نص المستخدم إلى تمثيل عددي
    user_input_transformed = vectorizer.transform([user_input])

    # توقع التصنيف
    prediction = model.predict(user_input_transformed)

    # عرض التصنيف المتوقع معكوس
    print(f"التصنيف المتوقع: {' '.join(word[::-1] for word in prediction[0].split())}")
